{"version":3,"file":"background.js","mappings":";;;AAAsG;AAGtGC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;EACpE,IAAIF,OAAO,CAACG,MAAM,KAAK,aAAa,EAAE;IAClC,IAAMC,KAAK,GAAGJ,OAAO,CAACK,GAAG,CAACC,EAAE;;IAE5B;IACAV,MAAM,CAACW,IAAI,CAACC,GAAG,CAACJ,KAAK,EAAE,UAASC,GAAG,EAAE;MACjC;MACA,IAAMI,GAAG,GAAG,IAAIC,GAAG,CAACL,GAAG,CAACI,GAAG,CAAC;MAC5B,IAAME,MAAM,GAAGF,GAAG,CAACG,QAAQ;MAE3BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,MAAM,CAAC;;MAEjD;MACAf,MAAM,CAACmB,SAAS,CAACC,aAAa,CAAC;QAC3BC,MAAM,EAAE;UAAEb,KAAK,EAAEA;QAAM,CAAC;QACxBc,KAAK,EAAE,CAAC,uCAAuC,GAAGP,MAAM,GAAG,eAAe;MAC9E,CAAC,CAAC,CAACQ,IAAI,CAAC,YAAM;QACVN,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGV,KAAK,CAAC;QAChDF,YAAY,CAAC;UAAEkB,MAAM,EAAE,SAAS;UAAET,MAAM,EAAEA;QAAO,CAAC,CAAC,CAAC,CAAC;MACzD,CAAC,CAAC,SAAM,CAAC,UAACU,KAAK,EAAK;QAChBR,OAAO,CAACQ,KAAK,CAAC,kCAAkC,GAAGjB,KAAK,EAAEiB,KAAK,CAAC;QAChEnB,YAAY,CAAC;UAAEkB,MAAM,EAAE,OAAO;UAAEpB,OAAO,EAAEqB,KAAK,CAACrB;QAAQ,CAAC,CAAC;MAC7D,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC,MAAM,IAAIA,OAAO,CAACG,MAAM,KAAK,YAAY,EAAE;IACxC;IACAD,YAAY,CAAC;MAAEkB,MAAM,EAAE;IAAU,CAAC,CAAC;IACnC,OAAO,IAAI;EACf;AACJ,CAAC,CAAC;AAGFxB,MAAM,CAAC0B,UAAU,CAACC,WAAW,CAACxB,WAAW,CACrC,UAASyB,OAAO,EAAE;EAChB;EACA,IAAIA,OAAO,CAACC,UAAU,KAAK,GAAG,EAAE;IAC9BZ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,OAAO,CAAC;IACvC;IACA,IAAME,gBAAgB,GAAGF,OAAO,CAACG,eAAe,CAACC,IAAI,CAAC,UAAAC,MAAM;MAAA,OAAIA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK,aAAa;IAAA,EAAC;IAC5G,IAAIL,gBAAgB,EAAE;MACpBb,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEY,gBAAgB,CAACM,KAAK,CAAC;MAC7D;IACF;EACF;AACF,CAAC,EACD;EAACC,IAAI,EAAE,CAAC,uBAAuB;AAAC,CAAC;AAAE;AACnC,CAAC,iBAAiB,CACtB,CAAC,C","sources":["webpack://goldenthinkerextractor/./src/background.js"],"sourcesContent":["import { extractFiltersAndValues } from './com_goldenthinkerextractor_filters_for_website/filters.js';\r\n\r\n\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    if (message.action === \"startScript\") {\r\n        const tabId = message.tab.id;\r\n\r\n        // Fetch the tab information to get its URL\r\n        chrome.tabs.get(tabId, function(tab) {\r\n            // Extract the domain from the tab's URL\r\n            const url = new URL(tab.url);\r\n            const domain = url.hostname;\r\n\r\n            console.log(\"Domain of the current tab:\", domain);\r\n\r\n            // Now proceed with injecting the script\r\n            chrome.scripting.executeScript({\r\n                target: { tabId: tabId },\r\n                files: ['com_goldenthinkerextractor_injection/' + domain + '/injection.js']\r\n            }).then(() => {\r\n                console.log(\"Script injected into tab \" + tabId);\r\n                sendResponse({ status: \"success\", domain: domain }); // Optionally include the domain in the response\r\n            }).catch((error) => {\r\n                console.error(\"Error injecting script into tab \" + tabId, error);\r\n                sendResponse({ status: \"error\", message: error.message });\r\n            });\r\n        });\r\n\r\n        return true; // indicates an asynchronous response.\r\n    } else if (message.action === \"stopScript\") {\r\n        // Handle stopScript action\r\n        sendResponse({ status: \"stopped\" });\r\n        return true;\r\n    }\r\n});\r\n\r\n\r\nchrome.webRequest.onCompleted.addListener(\r\n    function(details) {\r\n      // Check if the request was rate-limited\r\n      if (details.statusCode === 429) {\r\n        console.log(\"Rate limit hit:\", details);\r\n        // Optionally, extract the Retry-After header if present\r\n        const retryAfterHeader = details.responseHeaders.find(header => header.name.toLowerCase() === \"retry-after\");\r\n        if (retryAfterHeader) {\r\n          console.log(\"Retry after (seconds):\", retryAfterHeader.value);\r\n          // Here you could broadcast a message to your content scripts or take other actions\r\n        }\r\n      }\r\n    },\r\n    {urls: [\"*://www.example.com/*\"]}, // Adjust the pattern to match the URLs you're interested in\r\n    [\"responseHeaders\"]\r\n);\r\n  \r\n\r\n  \r\n\r\n"],"names":["extractFiltersAndValues","chrome","runtime","onMessage","addListener","message","sender","sendResponse","action","tabId","tab","id","tabs","get","url","URL","domain","hostname","console","log","scripting","executeScript","target","files","then","status","error","webRequest","onCompleted","details","statusCode","retryAfterHeader","responseHeaders","find","header","name","toLowerCase","value","urls"],"sourceRoot":""}