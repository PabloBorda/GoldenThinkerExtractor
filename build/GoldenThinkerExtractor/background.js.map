{"version":3,"file":"background.js","mappings":"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","sources":["webpack://goldenthinkerextractor/./src/background.js"],"sourcesContent":["chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"check_script_injected\") {\r\n    // Check for the marker\r\n    const scriptInjected = document.body.getAttribute('data-script-injected') === 'true' || window.scriptInjected === true;\r\n    sendResponse({ scriptInjected: scriptInjected });\r\n  } else if (message.action === \"execute_visitor_link_tree_bfs\") {\r\n    // Execute the function if requested\r\n    visitor_link_tree_bfs(rootLinks);\r\n    sendResponse({status: \"executed\", message: \"visitor_link_tree_bfs executed.\"});\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n// start_web_crawl_message\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"start_web_crawl_message\") {\r\n    // Function to check if the script is already injected\r\n    function checkScriptInjected(tabId, callback) {\r\n      chrome.tabs.sendMessage(tabId, { action: \"check_script_injected\" }, response => {\r\n        if (response && response.scriptInjected) {\r\n          callback(true);\r\n        } else {\r\n          callback(false);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Determine the tabId to use\r\n    const tabId = message.current_tab_id || (sender.tab ? sender.tab.id : null);\r\n\r\n    if (tabId) {\r\n      checkScriptInjected(tabId, isInjected => {\r\n        if (isInjected) {\r\n          // Script already injected, directly execute the function\r\n          chrome.tabs.sendMessage(tabId, { action: \"execute_visitor_link_tree_bfs\" });\r\n          console.log(\"Directly executing visitor_link_tree_bfs in tab:\", tabId);\r\n          sendResponse({ status: \"success\", message: \"Function executed directly.\" });\r\n        } else {\r\n          // Inject the script for the first time\r\n          // Ensure we have a valid URL from the sender.tab if current_tab_id was not provided\r\n          const tabUrl = sender.tab && sender.tab.url ? sender.tab.url : null;\r\n          if (!tabUrl) {\r\n            console.error(\"Tab URL is undefined.\");\r\n            sendResponse({ status: \"error\", message: \"Tab URL is undefined.\" });\r\n            return;\r\n          }\r\n          const url = new URL(tabUrl);\r\n          const domain = url.hostname;\r\n\r\n          chrome.scripting.executeScript({\r\n            target: { tabId: tabId },\r\n            files: ['com_goldenthinkerextractor_injection/' + domain + '/injection.js']\r\n          }).then(() => {\r\n            console.log(\"Script injected into tab:\", tabId);\r\n            sendResponse({ status: \"success\", domain: domain });\r\n          }).catch((error) => {\r\n            console.error(\"Error injecting script into tab:\", tabId, error);\r\n            sendResponse({ status: \"error\", message: error.message });\r\n          });\r\n        }\r\n      });\r\n      return true; // Keep the message channel open for the asynchronous response\r\n    } else {\r\n      console.error(\"Tab ID is undefined.\");\r\n      sendResponse({ status: \"error\", message: \"Tab ID is undefined.\" });\r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n// stop_web_crawl_message\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"stop_web_crawl_message\") {\r\n      // Handle stop_web_crawl_message action\r\n      sendResponse({ status: \"stopped\" });\r\n      return true;\r\n}});\r\n    \r\n\r\n\r\n\r\n// get_active_tab\r\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\r\n  if (request.action === \"get_active_tab\") {\r\n      chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\r\n          if (tabs.length > 0) {\r\n              const activeTab = tabs[0];\r\n              sendResponse({tabId: activeTab.id});\r\n          } else {\r\n              sendResponse({error: \"No active tab found\"});\r\n          }\r\n      });\r\n      return true; // Indicates that the response is sent asynchronously\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n// open_new_tab\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"open_new_tab\") {\r\n    chrome.tabs.create({url: message.url, active: false}, newTab => {\r\n      const checkTabLoaded = (tabId, changeInfo, tab) => {\r\n        if (tabId === newTab.id && changeInfo.status === 'complete') {\r\n          // Tab is fully loaded, now safe to inject the script\r\n          chrome.tabs.onUpdated.removeListener(checkTabLoaded); // Clean up the listener\r\n          console.log(\"Tab fully loaded with ID:\", newTab.id);\r\n          // Proceed with any actions needed after the tab is loaded\r\n          sendResponse({status: \"tab_was_opened\", new_tab_id: newTab.id});\r\n        }\r\n      };\r\n\r\n      chrome.tabs.onUpdated.addListener(checkTabLoaded);\r\n    });\r\n    return true; // Keep the message channel open for the sendResponse callback\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// close_current_tab\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"close_current_tab\") {\r\n      // Check if sender.tab.id is available to ensure the message comes from a content script within a tab\r\n      if (sender.tab && sender.tab.id) {\r\n          chrome.tabs.remove(sender.tab.id, () => {\r\n              // Check for any error that might have occurred during tab removal\r\n              if (chrome.runtime.lastError) {\r\n                  console.error(\"Error closing tab:\", chrome.runtime.lastError.message);\r\n                  sendResponse({status: \"error\", message: chrome.runtime.lastError.message});\r\n              } else {\r\n                  console.log(\"Tab closed successfully\");\r\n                  sendResponse({status: \"success\", message: \"Tab closed successfully\"});\r\n              }\r\n          });\r\n      } else {\r\n          console.error(\"Tab ID not found or message not sent from a tab.\");\r\n          sendResponse({status: \"error\", message: \"Tab ID not found or message not sent from a tab.\"});\r\n      }\r\n      return true; // Indicates that you wish to send a response asynchronously\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n//apply_macro_button_message\r\nchrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\r\n  if (message.action === \"apply_macro_button_message\") {\r\n\r\n      try {\r\n          const jsonData = JSON.parse(message.data);\r\n          console.log(\"JSON data is valid\", jsonData);\r\n          // Perform operations with jsonData here\r\n        \r\n          sendResponse({success: true, message: \"Data processed successfully\"});\r\n      } catch (error) {\r\n          console.error(\"Invalid JSON data\", error);\r\n          sendResponse({success: false, error: \"Invalid JSON data\"});\r\n        }\r\n    \r\n\r\n        // Use sender.tab.id if message.tab is undefined\r\n        const tabId = message.current_tab_id;\r\n\r\n        if (!tabId) {\r\n            console.error(\"Tab ID is undefined.\");\r\n            sendResponse({ status: \"error\", message: \"Tab ID is undefined.\" });\r\n            return true;\r\n        }\r\n        \r\n        // Fetch the tab information to get its URL\r\n        chrome.tabs.get(tabId, function(tab) {\r\n            // Extract the domain from the tab's URL\r\n            const url = new URL(tab.url);\r\n            const domain = url.hostname;\r\n    \r\n    \r\n            console.log(\"Domain of the current tab:\", domain);\r\n    \r\n            // Now proceed with injecting the script\r\n            chrome.scripting.executeScript({\r\n                target: { tabId: tabId },\r\n                files: ['com_goldenthinkerextractor_injection/' + domain + '/macro_injection.js']\r\n            }).then(() => {\r\n                console.log(\"macro_injection.js Script successfully injected into tab \" + tabId);\r\n                sendResponse({ status: \"success\", domain: domain });\r\n            }).catch((error) => {\r\n                console.error(\"Error injecting script into tab \" + tabId, error);\r\n                sendResponse({ status: \"error\", message: error.message });\r\n            });\r\n        });\r\n    \r\n        return true; // indicates an asynchronous response.\r\n        \r\n  // Example of processing data. Replace this with your actual logic.\r\n\r\n  return true; // Indicates that the response is sent asynchronously\r\n  }\r\n});\r\n\r\n\r\n\r\n// wait_for_dom_changes\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n\r\n  function waitForDomChanges(elementSelector = 'body', timeout = 10000) {\r\n    return new Promise((resolve, reject) => {\r\n      const observer = new MutationObserver((mutations, obs) => {\r\n        resolve();\r\n        obs.disconnect(); // Stop observing after changes are detected\r\n      });\r\n  \r\n      const elem = document.querySelector(elementSelector);\r\n      if (!elem) {\r\n        reject(new Error(`Element ${elementSelector} not found`));\r\n        return;\r\n      }\r\n  \r\n      observer.observe(elem, {\r\n        childList: true, // observe direct children\r\n        subtree: true, // and lower descendants too\r\n        attributes: false, // do not listen to attribute changes\r\n        characterData: false, // do not listen to text content changes\r\n      });\r\n  \r\n      // Optional: Reject the promise if no changes are observed within the timeout period\r\n      setTimeout(() => {\r\n        observer.disconnect();\r\n        reject(new Error('Timeout waiting for DOM changes'));\r\n      }, timeout);\r\n    });\r\n  }\r\n\r\n  if (message.action === \"wait_for_dom_changes\") {\r\n    // Define the function outside or just use it directly if not needed elsewhere\r\n    waitForDomChanges(message.elementSelector, message.timeout)\r\n      .then(() => {\r\n        sendResponse({success: true, message: \"DOM changes detected\"});\r\n      })\r\n      .catch(error => {\r\n        sendResponse({success: false, error: error.message});\r\n      });\r\n    return true; // Indicate an asynchronous response\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"extracted_links\") {\r\n      console.log(\"Links received in background script: \", message.links);\r\n      // Process the links as needed\r\n      sendResponse({status: \"Links processed\"});\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n//delay\r\nasync function delay(milliseconds) {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n}\r\n\r\n\r\n\r\n\r\n//http requests listener rate limit \r\nchrome.webRequest.onCompleted.addListener(async function(details) {\r\n  // Check for rate limiting or access denied\r\n  if (details.statusCode === 429 || details.statusCode === 403) {\r\n    const retryAfterHeader = details.responseHeaders.find(header => header.name.toLowerCase() === \"retry-after\");\r\n    if (retryAfterHeader) {\r\n      const retryAfterSeconds = parseInt(retryAfterHeader.value, 10) || 0; // Default to 0 if parsing fails\r\n      console.log(`Received ${details.statusCode}, retrying after:`, retryAfterSeconds, \"seconds\");\r\n      \r\n      // Convert seconds to milliseconds for the delay function\r\n      await delay(retryAfterSeconds * 1000);\r\n      \r\n      // After delay, you can take further action, such as retrying the request\r\n      console.log(\"Retrying now...\");\r\n      // Implement retry logic here\r\n    } else {\r\n      // If there's no Retry-After header, you might choose to handle it differently\r\n      console.log(`Received ${details.statusCode} without a Retry-After header.`);\r\n      // Implement alternative handling here\r\n    }\r\n  }\r\n},\r\n{urls: [\"<all_urls>\"]},\r\n[\"responseHeaders\"]\r\n);\r\n\r\n// Listen for messages from the background script\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.action === \"execute_visitor_link_tree_bfs\") {\r\n    // Execute the BFS function\r\n    const rootLinks = [\"https://www.mercadolibre.com.co/categorias#menu=categories\"];\r\n    visitor_link_tree_bfs(rootLinks).then(() => {\r\n      sendResponse({status: \"completed\"});\r\n    }).catch(error => {\r\n      console.error(\"Error executing visitor_link_tree_bfs:\", error);\r\n      sendResponse({status: \"error\", message: error.toString()});\r\n    });\r\n    return true; // Return true to indicate asynchronous response\r\n  }\r\n});\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","chrome","runtime","onMessage","addListener","message","sender","sendResponse","action","scriptInjected","document","body","getAttribute","window","visitor_link_tree_bfs","rootLinks","status","checkScriptInjected","tabId","callback","tabs","sendMessage","response","current_tab_id","tab","id","isInjected","console","log","tabUrl","url","URL","domain","hostname","scripting","executeScript","target","files","request","query","active","currentWindow","activeTab","newTab","checkTabLoaded","changeInfo","onUpdated","removeListener","new_tab_id","remove","lastError","jsonData","JSON","parse","data","success","get","waitForDomChanges","elementSelector","timeout","observer","MutationObserver","mutations","obs","disconnect","elem","querySelector","concat","observe","childList","subtree","attributes","characterData","setTimeout","links","delay","_x","_delay","_callee2","milliseconds","_callee2$","_context2","webRequest","onCompleted","_ref","_callee","details","retryAfterHeader","retryAfterSeconds","_callee$","_context","statusCode","responseHeaders","find","header","toLowerCase","parseInt","_x2","urls","toString"],"sourceRoot":""}