{"version":3,"file":"content.js","mappings":"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","sources":["webpack://goldenthinkerextractor/./src/content.js"],"sourcesContent":["\nconsole.log(\"content.js script successfully injected from the static manifest.json\")\n\nclass UserSimulator {\n    constructor() {}\n  \n    simulate_user_typing(selector, value, maxDelayMs = 2) {\n      const input = document.querySelector(selector);\n      if (!input) {\n          console.error('Input field not found');\n          return;\n      }\n  \n      input.focus();\n  \n      const chars = value.split('');\n      let typingPromise = Promise.resolve(); // Start with a resolved promise\n  \n      chars.forEach(char => {\n          typingPromise = typingPromise.then(() => {\n              return new Promise(resolve => {\n                  setTimeout(() => {\n                      // Create and dispatch the keydown event\n                      const keydownEvent = new KeyboardEvent('keydown', {\n                          key: char,\n                          code: `Key${char.toUpperCase()}`,\n                          bubbles: true\n                      });\n                      input.dispatchEvent(keydownEvent);\n  \n                      input.value += char; // Add character to input value\n  \n                      // Create and dispatch the keyup event\n                      const keyupEvent = new KeyboardEvent('keyup', {\n                          key: char,\n                          code: `Key${char.toUpperCase()}`,\n                          bubbles: true\n                      });\n                      input.dispatchEvent(keyupEvent);\n  \n                      // Trigger input event after keyup to simulate the input change\n                      const event = new Event('input', { bubbles: true });\n                      input.dispatchEvent(event);\n  \n                      resolve(); // Resolve the promise to allow the next iteration\n                  }, Math.random() * maxDelayMs);\n              });\n          });\n      });\n    }\n  \n  \n    listen_mouse_movement(){\n        document.addEventListener('mousemove', function(event) {\n            const x = event.clientX; // Get the horizontal coordinate\n            const y = event.clientY; // Get the vertical coordinate\n            console.log(`Mouse position: X=${x}, Y=${y}`);\n        }); \n    }\n}\n  \n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === \"simulate_user_typing\") {\n        // Implement keyboard simulation logic here\n        console.log(\"execute: simulate_user_typing\");\n        user_simulator.simulate_user_typing(message.target, message.text);\n        sendResponse({success: true, message: \"Typing simulation complete\"});\n    } else if (message.action === \"listen_mouse_movement\") {\n        // Implement mouse simulation logic here\n        user_simulator.listen_mouse_movement(message.eventType, message.options);\n        sendResponse({success: true, message: \"Typing simulation complete\"});\n    }\n    return true;\n  });\n  \n\n  "],"names":["console","log","UserSimulator","_classCallCheck","_createClass","key","value","simulate_user_typing","selector","maxDelayMs","arguments","length","undefined","input","document","querySelector","error","focus","chars","split","typingPromise","Promise","resolve","forEach","char","then","setTimeout","keydownEvent","KeyboardEvent","code","concat","toUpperCase","bubbles","dispatchEvent","keyupEvent","event","Event","Math","random","listen_mouse_movement","addEventListener","x","clientX","y","clientY","chrome","runtime","onMessage","addListener","message","sender","sendResponse","action","user_simulator","target","text","success","eventType","options"],"sourceRoot":""}